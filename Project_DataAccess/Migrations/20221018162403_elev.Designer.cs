// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_DataAccess;

#nullable disable

namespace Project_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221018162403_elev")]
    partial class elev
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EtkinlikKullanici", b =>
                {
                    b.Property<int>("EtkinlikID")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.HasKey("EtkinlikID", "KullaniciID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("EtkinlikKullanici");
                });

            modelBuilder.Entity("EtkinlikSehir", b =>
                {
                    b.Property<int>("EtkinlikID")
                        .HasColumnType("int");

                    b.Property<int>("SehirID")
                        .HasColumnType("int");

                    b.HasKey("EtkinlikID", "SehirID");

                    b.HasIndex("SehirID");

                    b.ToTable("EtkinlikSehir");
                });

            modelBuilder.Entity("Project_Model.Etkinlik", b =>
                {
                    b.Property<int>("EtkinlikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EtkinlikID"), 1L, 1);

                    b.Property<string>("EtkinlikAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EtkinlikKisiLimiti")
                        .HasColumnType("int");

                    b.Property<DateTime>("EtkinlikTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("EtkinlikYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTicket")
                        .HasColumnType("bit");

                    b.Property<int?>("KategoriID")
                        .HasColumnType("int");

                    b.HasKey("EtkinlikID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Etkinliks");
                });

            modelBuilder.Entity("Project_Model.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"), 1L, 1);

                    b.Property<string>("KategoriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("Project_Model.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"), 1L, 1);

                    b.Property<string>("KullaniciAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciRegisterID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciYas")
                        .HasColumnType("int");

                    b.Property<int?>("kullaniciRolRoleID")
                        .HasColumnType("int");

                    b.HasKey("KullaniciID");

                    b.HasIndex("kullaniciRolRoleID");

                    b.ToTable("Kullanicis");
                });

            modelBuilder.Entity("Project_Model.KullaniciRol", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.HasKey("RoleID");

                    b.ToTable("KullaniciRols");
                });

            modelBuilder.Entity("Project_Model.Sehir", b =>
                {
                    b.Property<int>("SehirID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SehirID"), 1L, 1);

                    b.Property<string>("SehirAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SehirID");

                    b.ToTable("Sehirs");
                });

            modelBuilder.Entity("EtkinlikKullanici", b =>
                {
                    b.HasOne("Project_Model.Etkinlik", null)
                        .WithMany()
                        .HasForeignKey("EtkinlikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_Model.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EtkinlikSehir", b =>
                {
                    b.HasOne("Project_Model.Etkinlik", null)
                        .WithMany()
                        .HasForeignKey("EtkinlikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_Model.Sehir", null)
                        .WithMany()
                        .HasForeignKey("SehirID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_Model.Etkinlik", b =>
                {
                    b.HasOne("Project_Model.Kategori", "Kategori")
                        .WithMany("etkinlik")
                        .HasForeignKey("KategoriID");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Project_Model.Kullanici", b =>
                {
                    b.HasOne("Project_Model.KullaniciRol", "kullaniciRol")
                        .WithMany("kullanici")
                        .HasForeignKey("kullaniciRolRoleID");

                    b.Navigation("kullaniciRol");
                });

            modelBuilder.Entity("Project_Model.Kategori", b =>
                {
                    b.Navigation("etkinlik");
                });

            modelBuilder.Entity("Project_Model.KullaniciRol", b =>
                {
                    b.Navigation("kullanici");
                });
#pragma warning restore 612, 618
        }
    }
}
